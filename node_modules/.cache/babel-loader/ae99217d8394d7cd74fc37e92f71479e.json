{"ast":null,"code":"var _jsxFileName = \"C:\\\\www\\\\projetos\\\\d5react\\\\my-todo-list\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport * as C from './App.styles';\nimport { ListItem } from './components/ListItem';\nimport { AddArea } from './components/AddArea';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //* Com isso define que vai ser do tipo Item e que\n  //¬ é um array\n  const [list, setList] = useState([]);\n\n  const handleAddTask = taskName => {\n    let newList = [...list];\n    newList.push({\n      id: list.length + 1,\n      name: taskName,\n      done: false\n    });\n    setList(newList);\n  };\n\n  return /*#__PURE__*/_jsxDEV(C.Container, {\n    children: /*#__PURE__*/_jsxDEV(C.Area, {\n      children: [/*#__PURE__*/_jsxDEV(C.Header, {\n        children: \"My TODO List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddArea, {\n        onEnter: handleAddTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), list.map((item, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        item: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"7bxBnKDVKAM8R9HZ89dLWcFCGqA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/www/projetos/d5react/my-todo-list/src/App.tsx"],"names":["useState","C","ListItem","AddArea","App","list","setList","handleAddTask","taskName","newList","push","id","length","name","done","map","item","index"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,KAAKC,CAAZ,MAAmB,cAAnB;AAGA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,OAAT,QAAwB,sBAAxB;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA;AACA,QAAM,CAAEC,IAAF,EAAQC,OAAR,IAAoBN,QAAQ,CAAS,EAAT,CAAlC;;AAGA,QAAMO,aAAa,GAAIC,QAAD,IAAsB;AAC1C,QAAIC,OAAO,GAAI,CAAC,GAAGJ,IAAJ,CAAf;AACAI,IAAAA,OAAO,CAACC,IAAR,CAAa;AACXC,MAAAA,EAAE,EAAIN,IAAI,CAACO,MAAL,GAAc,CADT;AAEXC,MAAAA,IAAI,EAAEL,QAFK;AAGXM,MAAAA,IAAI,EAAE;AAHK,KAAb;AAMAR,IAAAA,OAAO,CAACG,OAAD,CAAP;AACD,GATD;;AAYA,sBACE,QAAC,CAAD,CAAG,SAAH;AAAA,2BACE,QAAC,CAAD,CAAG,IAAH;AAAA,8BACE,QAAC,CAAD,CAAG,MAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAGE,QAAC,OAAD;AAAS,QAAA,OAAO,EAAEF;AAAlB;AAAA;AAAA;AAAA;AAAA,cAHF,EAKGF,IAAI,CAACU,GAAL,CAAS,CAACC,IAAD,EAAOC,KAAP,kBACR,QAAC,QAAD;AAAsB,QAAA,IAAI,EAAED;AAA5B,SAAeC,KAAf;AAAA;AAAA;AAAA;AAAA,cADD,CALH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAhCQb,G;;KAAAA,G;AAkCT,eAAeA,GAAf","sourcesContent":["import { useState } from 'react';\nimport * as C from './App.styles';\nimport { Item } from './types/Item';\n\nimport { ListItem } from './components/ListItem';\nimport { AddArea } from './components/AddArea';\n\n\nfunction App() {  \n  //* Com isso define que vai ser do tipo Item e que\n  //¬ é um array\n  const [ list, setList ] = useState<Item[]>([\n  ]);\n\n  const handleAddTask = (taskName: string) => {\n    let newList =  [...list];\n    newList.push({\n      id: ( list.length + 1 ),\n      name: taskName,\n      done: false,\n    });\n\n    setList(newList);\n  }\n\n\n  return (\n    <C.Container>\n      <C.Area>\n        <C.Header>My TODO List</C.Header>\n\n        <AddArea onEnter={handleAddTask} />\n\n        {list.map((item, index) => (\n          <ListItem key={index} item={item} />\n        ))}\n\n      </C.Area>\n    </C.Container>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}